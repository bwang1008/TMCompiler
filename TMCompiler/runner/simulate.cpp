/**
 * Given the name of a JSON file generated by the compile program,
 * read in the Multi-Tape Turing Machine and simulate for a number of steps
 */

#include <iostream>		// std::cout, std::endl
#include <fstream>		// std::ifstream

#include "TMCompiler/tm_definition/multi_tape_turing_machine.hpp"
#include "TMCompiler/utils/json.hpp"

int main(int argc, char* argv[]) {
	if(argc <= 1) {
		std::cout << "Please provide the name of a JSON file to read in" << std::endl;
		return -1;
	}

	// options...

	const std::string fileName(argv[1]);
	std::ifstream inputFile(fileName);

	if(!inputFile.is_open()) {
		std::cout << "File " << fileName << " not found" << std::endl;
		return -1;
	}

	nlohmann::json j;
	inputFile >> j;
	inputFile.close();

	std::cout << "File successfully read" << std::endl;

	MultiTapeTuringMachine mttm = j.get<MultiTapeTuringMachine>();

	std::cout << "JSON to MTTM successful" << std::endl;

	std::cout << "Begin simulating:" << std::endl;

	int debug = 0;
	int numSteps = 0;
	int limit = 0;

	while(!mttm.halted() && (limit <= 0 || numSteps < limit)) {
		mttm.step(debug);

		if(debug) {
			std::cout << "After step " << numSteps << std::endl;
			mttm.displayTapes();
		}

		if(numSteps % 50000 == 0) {
			std::cout << "Finished " << numSteps << " steps" << std::endl;
		}

		++numSteps;
	}

	std::cout << "Final: " << std::endl;
	mttm.displayTapes();
	std::cout << numSteps << " steps" << std::endl;

	std::cout << "halted ? " << mttm.halted() << std::endl;

}
